# Stage 1: Build the application
FROM node:18-alpine AS builder

# Install build dependencies
RUN apk add --no-cache python3 make g++

# Set working directory
WORKDIR /app

# Copy dependency manifests
COPY package.json package-lock.json* ./

# Install dependencies
RUN npm ci --force

# Copy the rest of the app source code
COPY . .

# Optional TypeScript compilation
RUN if [ ! -f "server.js" ] && [ -f "node_modules/.bin/tsc" ]; then \
    echo "Compiling TypeScript..." && \
    npm run build || ./node_modules/.bin/tsc; \
else \
    echo "Skipping TypeScript compilation"; \
fi

# Stage 2: Create the production image
FROM node:18-alpine AS runner

# Create app directory
WORKDIR /app

# Set environment to production
ENV NODE_ENV=production

# Create non-root user
RUN addgroup -S nodejs && adduser -S nodeapp -G nodejs

# Copy node_modules and built files from builder
COPY --from=builder /app .

# Use non-root user
USER nodeapp

# Expose the correct port
EXPOSE 3001

# Start the server
CMD ["node", "server.js"]
