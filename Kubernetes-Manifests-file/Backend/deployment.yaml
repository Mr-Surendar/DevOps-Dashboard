apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: three-tier
  labels:
    role: api
    env: demo
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1  # Fixed: was 25% but should be integer for small replica count
  selector:
    matchLabels:
      role: api
  template:
    metadata:
      labels:
        role: api
    spec:
      imagePullSecrets:
      - name: ecr-registry-secret
      containers:
      - name: api
        image: 633087886901.dkr.ecr.us-east-1.amazonaws.com/backend:1
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        env:
          - name: MONGO_CONN_STR
            value: mongodb+srv://Devopenitor:mkTQ22Aa2Jru6Bf3@cluster0.99leeu2.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
          - name: MONGO_USERNAME
            valueFrom:
              secretKeyRef:
                name: mongo-sec
                key: username
          - name: MONGO_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mongo-sec
                key: password
          - name: PORT  # Added: Most Node.js apps expect PORT env var
            value: "3500"
        ports:
        - containerPort: 3001
        # Removed health check probes - they'll cause failures if your app doesn't have these endpoints
        # Add them back only if your backend actually implements /healthz, /ready, /started endpoints
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: three-tier
  labels:
    role: api
    env: demo
spec:
  selector:
    role: api
  ports:
  - name: http
    port: 80
    targetPort: 3001
    protocol: TCP
  type: LoadBalancer