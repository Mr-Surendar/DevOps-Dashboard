# MongoDB Secret
apiVersion: v1
kind: Secret
metadata:
  name: mongo-sec
  namespace: three-tier
type: Opaque
stringData:
  username: "Devopenitor"
  password: "mkTQ22Aa2Jru6Bf3"
  connection_string: "mongodb+srv://Devopenitor:mkTQ22Aa2Jru6Bf3@cluster0.99leeu2.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0"
---
# Backend API Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: three-tier
  labels:
    role: api
    env: demo
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      role: api
  template:
    metadata:
      labels:
        role: api
    spec:
      imagePullSecrets:
      - name: ecr-registry-secret
      containers:
      - name: api
        image: 633087886901.dkr.ecr.us-east-1.amazonaws.com/backend:1
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        env:
          - name: MONGO_CONN_STR
            valueFrom:
              secretKeyRef:
                name: mongo-sec
                key: connection_string
          - name: MONGO_USERNAME
            valueFrom:
              secretKeyRef:
                name: mongo-sec
                key: username
          - name: MONGO_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mongo-sec
                key: password
          - name: PORT
            value: "3001"  # Changed to match your server code
        ports:
        - containerPort: 3001  # Changed to match your server code
        readinessProbe:  # Added basic readiness probe
          httpGet:
            path: /
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 2
        livenessProbe:  # Added basic liveness probe
          httpGet:
            path: /
            port: 3001
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 2
---
# Backend API Service
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: three-tier
  labels:
    role: api
    env: demo
spec:
  selector:
    role: api
  ports:
  - name: http
    port: 80
    targetPort: 3001  # Changed to match your server code
    protocol: TCP
  type: LoadBalancer